#T1Pro

[include macros.cfg]
[exclude_object]

####################################################################################################
#motor part
####################################################################################################
[stepper_a]
step_pin: PE5
dir_pin: !PD7  # motor direction pin
enable_pin: !PE1
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD4
homing_speed: 40
#position_endstop: 332
#arm_length = 335

[stepper_b]
step_pin: PB9
dir_pin: !PC7  # motor direction pin
enable_pin: !PD3
microsteps: 32
rotation_distance: 60
endstop_pin: ^PD14
#position_endstop: 332
#arm_length = 335

[stepper_c]
step_pin: PB8
dir_pin: !PE15  # motor direction pin,"!PE2" and "PE2" represent different directions
enable_pin: !PD13
microsteps: 32
rotation_distance: 60 #rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>, 
endstop_pin: ^PE10
#position_endstop: 332 # printer printable height
#arm_length = 335

[extruder]
step_pin: PD15
dir_pin: !PB0
enable_pin: !PB1
microsteps: 16
rotation_distance: 4.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA5
sensor_type: Generic 3950
pullup_resistor: 510
sensor_pin: PA4
min_temp: -200 # extruder min temp
max_temp: 320 # extruder max temp
max_extrude_cross_section: 50 # default 0.640
max_extrude_only_distance: 500
pressure_advance: 0.025 
#pressure_advance: 0.041
control:pid
pid_Kp: 14.155
pid_Ki: 0.303
pid_Kd: 165.086

[tmc5160 stepper_c]
cs_pin: PD9
spi_software_sclk_pin:PD10
spi_software_miso_pin:PD8
spi_software_mosi_pin:PD11
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_a]
cs_pin: PB4
spi_software_sclk_pin:PE0
spi_software_miso_pin:PB3
spi_software_mosi_pin:PD5
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 stepper_b]
cs_pin: PC6
spi_software_sclk_pin:PD0
spi_software_miso_pin:PA8
spi_software_mosi_pin:PD1
#spi_speed:100000
sense_resistor: 0.0375
run_current: 3
hold_current: 1.6
stealthchop_threshold: 0
interpolate: true

[tmc5160 extruder]
cs_pin:PC4
spi_software_sclk_pin:PA7
spi_software_mosi_pin:PA6
spi_software_miso_pin:PC5
sense_resistor: 0.0375
run_current: 1.2
hold_current: 0.3 # motor hold current

####################################################################################################
#mcu ,pin
####################################################################################################
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[fan]
pin: !PE6
cycle_time: 0.0001
max_power: 0.6

[heater_fan heat_sink_fan] 
pin: PE8
heater_temp: 50.0

[heater_bed]
heater_pin: PA2
sensor_pin: PA1
sensor_type: Generic 3950
min_temp: -5
max_temp: 130 #hotbed max temp
control:pid
pid_Kp: 18.240
pid_Ki: 0.558
pid_Kd: 149.109

[temperature_sensor Armv7 mcu] #the temp of pad
sensor_type: temperature_host
min_temp: -50
max_temp: 100

[temperature_sensor mcu_temp] #the temp of mcu
sensor_type: temperature_mcu
min_temp: -50
max_temp: 100

[input_shaper]
#shaper_freq_x: 34.78   # frequency for the X mark of the test model
#shaper_freq_y: 31.68  # frequency for the Y mark of the test model

[filament_switch_sensor filament_sensor]
pause_on_runout: False
runout_gcode: 
    M117 Filament Runout Detected!
    PAUSE
switch_pin: !PE7
helper:RunoutDebounceHelper
event_delay: 0.0001

[printer]
kinematics: delta
max_velocity: 1000 #max print speed ,default is 400mm/s
max_accel: 30000 
max_accel_to_decel: 8000
square_corner_velocity: 5 
max_z_velocity: 1000
#delta_radius: 171.2 # delta radius,default is 171.2
print_radius: 133 #max printable radius
minimum_z_position:-5 # min z position nozzle won't go to the position which Z lower the vaule
normal_minimum_z_position: -0.5 # The minimum z that can be set during normal movement

################################################################################################################
#calibrate and bed_mesh
################################################################################################################
[delta_calibrate]
radius: 120
horizontal_move_z: 5 #This value is related to the lift height of the nozzle during delta_calibrate
Speed: 300

[probe]
pin: !PA3
x_offset: 0 
y_offset: 0 
z_offset: -0.18 #the distance between nozzle and level switch, (previously was -0.24)
speed: 10
samples: 2 #probe one point three times get an average
samples_result: average
sample_retract_dist: 5
samples_tolerance: 0.05 # precision
samples_tolerance_retries: 5 

[bed_mesh]
speed: 300
horizontal_move_z: 7 #This value is related to the lift height of the nozzle during bed_mesh
mesh_radius: 125
mesh_origin: 0,0
round_probe_count: 7 # 7*7
# probe_count: 5,5 #this is the number of probing points on X then Y axis, defined just to make adaptive work properly
algorithm: bicubic
fade_start: 0.2
fade_end: 0.0
fade_target: 0

#############################################################################################################
#GCODE
#############################################################################################################
[output_pin relay_pin]
pin: PD6
pwm: False
value: 0

[gcode_macro relay_on]
gcode:
    SET_PIN PIN=relay_pin VALUE=1

[gcode_macro relay_off]
gcode:
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    SET_PIN PIN=relay_pin VALUE=0

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.025 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.025 MOVE=1

[output_pin BOXFAN_pin]
pin: PE2
pwm: False
value: 0
[gcode_macro boxfan_on]
gcode:
    SET_PIN PIN=BOXFAN_pin VALUE=1

[gcode_macro boxfan_off]
gcode:
    SET_PIN PIN=BOXFAN_pin VALUE=0

[gcode_macro MEASURING_RESONANCES] #检测共振
description: Measuring Resonances
gcode: 
     M117 MEASURING RESONANCES START !
     G28
     SAVE_VARIABLE VARIABLE=resonances_state VALUE=True
     SHAPER_CALIBRATE
     G28
     SAVE_CONFIG

[gcode_macro bed_level_1]
gcode:
    SET_GCODE_OFFSET Z=0
    M117 BED LEVEL START !
    G28
    M204 S200
    M104 S140
    M140 S60
    M109 S140
    M190 S60
    delta_calibrate
    G1 X0 Y0 Z50 F4200
    M104 S0
    M140 S0
    G28
    F104 K=level_state V=True
    save_config

[gcode_macro bed_level_2]
gcode:
    G28
    M204 S200
    M104 S140
    M140 S60
    M109 S140
    M190 S60
    G1 X0 Y0 Z50 F4200
    bed_mesh_calibrate
    G1 X0 Y0 Z50 F4200
    M104 S0
    M140 S0
    G28
    F104 K=level2_state V=True
    save_config

##### LOAD and UNLOAD replaced in macros.cfg file

# [gcode_macro UNLOAD_FILAMENT] #unload filament
# gcode:
#     {% set speed_factor = printer.gcode_move.speed_factor|float %}
#     {% set extrude_factor = printer.gcode_move.extrude_factor|float %}
#     M117 unload_filament heating completed!
#     G91
#     M220 S100   # set speed_factor to normal
#     M221 S100   # set extrude_factor to normal
#     G1 E10 F300
#     G1 E-100 F800
#     # G1 E-100 F200
#     M400
#     M220 S{speed_factor*100} # recover speed_factor
#     M221 S{extrude_factor*100} # recover extrude_factor
#     G90
#     M117 unload_filament done!

# [gcode_macro LOAD_FILAMENT] #load filament
# gcode:
#     {% set speed_factor = printer.gcode_move.speed_factor|float %}
#     {% set extrude_factor = printer.gcode_move.extrude_factor|float %}

#     M117 load_filament heating completed!
#     G91
#     M220 S100    # set speed_factor to normal
#     M221 S100    # set extrude_factor to normal
#     G1 E70 F800
#     G1 E30 F300
#     M400
#     M220 S{speed_factor*100}  # recover speed_factor
#     M221 S{extrude_factor*100}  # recover extrude_factor
#     G90
#     M117 load_filament done!

[gcode_macro M600]
gcode:
    PAUSE

[gcode_macro TMC]
gcode:
    DUMP_TMC STEPPER=stepper_a
    DUMP_TMC STEPPER=stepper_b
    DUMP_TMC STEPPER=stepper_c
    DUMP_TMC STEPPER=extruder

[gcode_macro save_time]
gcode:
    {% if printer.save_variables.variables.total_time %}
        {% set print_time = printer.save_variables.variables.total_time %}
    {% else %} 
        {% set print_time = 0 %}
    {% endif %}
    {% set print_time = print_time + printer.print_stats.print_duration/3600 %}
    SAVE_VARIABLE VARIABLE=total_time VALUE={print_time}

[gcode_macro SET_GCODE_OFFSET]
rename_existing: _SET_GCODE_OFFSET
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}
    {% else %} 
        {% set offsets = {'x': None,'y': None,'z': None} %}
    {% endif %}
    {% set ns = namespace(offsets={'x': offsets.x,'y': offsets.y,'z': offsets.z}) %}
    {%if 'X' in params %}{% set null = ns.offsets.update({'x': params.X}) %}{% endif %}
    {%if 'Y' in params %}{% set null = ns.offsets.update({'y': params.Y}) %}{% endif %}
    {%if 'Z' in params %}{% set null = ns.offsets.update({'z': params.Z}) %}{% endif %}
    {%if 'Z_ADJUST' in params %}
        {%if ns.offsets.z == None %}{% set null = ns.offsets.update({'z': 0}) %}{% endif %}
        {% set null = ns.offsets.update({'z': (ns.offsets.z | float) + (params.Z_ADJUST | float)}) %}
    {% endif %}
    {% set z_offset_min = (-0.10001|float) %}
    {% set z_offset_max = (0.10001|float) %}
    {% if (ns.offsets.z | float) <= z_offset_max and (ns.offsets.z | float) >= z_offset_min %}
        _SET_GCODE_OFFSET {% for p in params %}{'%s=%s '% (p, params[p])}{% endfor %}
        SAVE_VARIABLE VARIABLE=gcode_offsets VALUE="{ns.offsets}"
    {% else %}
        M117 Z_ADJUST out of range,available range is { z_offset_min } to { z_offset_max }!
    {% endif %}

[delayed_gcode LOAD_GCODE_OFFSETS]
initial_duration: 2
gcode:
    {% if printer.save_variables.variables.gcode_offsets %}
        {% set offsets = printer.save_variables.variables.gcode_offsets %}

        _SET_GCODE_OFFSET {% for axis, offset in offsets.items() if offsets[axis] %}{ "%s=%s " % (axis, offset) }{% endfor %}

        { action_respond_info("Loaded gcode offsets from saved variables [%s]" % (offsets)) }
    {% endif %}|
    {% if printer.save_temp_variables.variables.level_state %}
        F104 K=level_state V=False
        M117 BedLevel1 Done
        bed_level_2
    {% endif %}|
    {% if printer.save_temp_variables.variables.level2_state %}
        F104 K=level2_state V=False
        M117 BedLevel Done
    {% endif %}|
    {% if printer.save_variables.variables.resonances_state %}
        SAVE_VARIABLE VARIABLE=resonances_state VALUE=False
        G28
        M117 Vibration Compensation Done
    {% endif %}
    SAVE_VARIABLE VARIABLE=plr_flag VALUE=False

[delayed_gcode LOAD_FUNCTION_SWITCH_DELAY]
initial_duration: 0.2
gcode:  
    LOAD_FUNCTION_SWITCH

[idle_timeout]
gcode:
#     A list of G-Code commands to execute on an idle timeout. See
#     docs/Command_Templates.md for G-Code format. The default is to run
#     "TURN_OFF_HEATERS" and "M84".
timeout: 172800
#     Idle time (in seconds) to wait before running the above G-Code
#     commands. The default is 600 seconds.

####################################################################################################################################
#PAUSE ,RESUME ,CANCEL_PRINT
####################################################################################################################################
[pause_resume]

[gcode_macro PAUSE] 
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "printing" %}
        {% set x = params.X|default(0) %}      #edit to your park position
        {% set y = params.Y|default(-110) %}      #edit to your park position
        {% set z = params.Z|default(10)|float %} #edit to your park position
        {% set e = params.E|default(1) %}        #edit to your retract length

        ##### calculate save lift position #####
        {% set max_z = printer.toolhead.axis_maximum.z|float %}
        {% set homed_z = printer.gcode_move.homing_origin[2]|float %}
        {% set limit_z = (max_z - homed_z)|round(4,'floor') %}
        {% set act_z = printer.toolhead.position.z|float %}
        {% set lift_z = z|abs %}

        ### If the current position is greater than max_z-60, xy is set to 0###
        ### Normally, the max_z-limit_z is around 46mm,now expand 50mm###
        {% if act_z >= limit_z - 60 %}
            {% set x = 0 %}
            {% set y = 0 %}
            {% set toohigh = true %}
        {% else %}
            {% set toohigh = false %}
        {% endif %}

        {% if act_z < (limit_z - lift_z) %}
            {% set z_safe = act_z + lift_z %}
        {% else %}
            {% set z_safe = limit_z %}
        {% endif %}

        {% set fan_speed = printer.fan.speed|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan_speed VALUE={fan_speed}
        ##### end of definitions #####
        PAUSE_BASE
        G91
        {% if printer.extruder.can_extrude|lower == 'true' %}
            G1 E-{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        {% if "xyz" in printer.toolhead.homed_axes %}
            G90
            {% if toohigh == true %}
                G1 X{x} Y{y} Z{z_safe} F6000
                M117 Current position is too high,pause and move to X={ x } Y={ y } Z={ z_safe }
            {% else %}
                # Move the Z-axis to a safe height to avoid collision with the bed or other objects 
                G1 z{z_safe} F6000
                # Move the X and Y axes to the specified position
                G1 X{x} Y{y} F6000
                # clear bed_mesh Z fade height
                G1 X{x} Y{y} F6000
                M117 Pause and move to X={ x } Y={ y } Z={ z_safe }
            {% endif %}
        {% else %}
            {action_respond_info("Printer not homed")}
        {% endif %}
        {% set nozzle_temp = printer.extruder.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=nozzle_temp VALUE={nozzle_temp}
        M104 S90
        {% set bed_temp = printer.heater_bed.target|float %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=bed_temp VALUE={bed_temp}
        M106 S0
        F108
        M400
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
variable_fan_speed: 0
variable_nozzle_temp: 0
variable_bed_temp: 0
gcode:
    ##### set defaults #####
    {% if printer.print_stats.state == "paused" %}
        M140 S{bed_temp}
        M109 S{nozzle_temp}
        {% set e = params.E|default(1) %} #edit to your retract length
        #### get VELOCITY parameter if specified ####
        {% if 'VELOCITY' in params|upper %}
            {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
        {%else %}
            {% set get_params = "" %}
        {% endif %}
        ##### end of definitions #####
        G91
        {% if nozzle_temp >= 180 %}
            G1 E{e} F2100
        {% else %}
            {action_respond_info("Extruder not hot enough")}
        {% endif %}
        G90
        M400
        RESUME_BASE {get_params}
        {% set fan_speed = fan_speed / printer.fan.max_power * 255 %}
        M106 S{fan_speed}
    {% endif %}

[force_move]
enable_force_move: True

[gcode_macro RESTORE_E_CURRENT]
gcode:
    SET_TMC_CURRENT STEPPER=extruder CURRENT=1.2
##############################################################################################
##############################################################################################
[gcode_macro START_PRINT] # Leaving this here as somewhere calls it out no matter what you try to remove. So leaving to just store states
gcode:
    relay_on
    {% set sd_filename = printer.virtual_sdcard.file_path|string %}
    SAVE_VARIABLE VARIABLE=sd_filename VALUE='"{sd_filename}"'
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    SAVE_VARIABLE VARIABLE=file_position VALUE=0
    SAVE_VARIABLE VARIABLE=x_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=y_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=z_pos VALUE=0.0
    SAVE_VARIABLE VARIABLE=e_pos VALUE=0.0
    SET_TMC_CURRENT STEPPER=extruder CURRENT=0.8
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0
    CLEAR_PAUSE
    M105 S1
    # M106 S255 # Dont turn on fan speed here
    # boxfan_on  # I do not want box fan on all the time, that is controlled by filemtn type now
    # G28  # removed auto home as that is handled in the PRINT_START

[gcode_macro END_PRINT]
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    boxfan_off
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    # M106 S255
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=100

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
    F100
    M106 S0
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE
    M105 S1
    G28
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    boxfan_off
    M106 S255
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=100

[delayed_gcode heatsink]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    M106 S0
    UPDATE_DELAYED_GCODE ID=heatsink DURATION=0
###########################################################################################################################
###########################################################################################################################
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode:
    M106 S0
    TURN_OFF_HEATERS
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    boxfan_off

[include overrides.cfg] # added for the downloaded macros.cfg overrides

[save_variables]
filename: ~/savedVariables1.cfg

[rotate_logger]
filename: ~/klipper_logs/mylog.txt
max_bytes: 1048576
backup_count: 3

[gcode_arcs]

[include timelapse.cfg] #Load the camera recording function

[display_status]

[resonance_tester]
probe_points:0, 0, 20
accel_chip: adxl345
min_freq: 30
max_freq: 50
accel_per_hz: 250

[adxl345]
cs_pin:PE11
spi_software_sclk_pin:PE14
spi_software_mosi_pin:PE13
spi_software_miso_pin:PE12
rate:1600

###########################################################################################################################
# M106
###########################################################################################################################
[gcode_macro M106]
description: fan speed control
rename_existing: M106.1
gcode:
    {% set last_fan_speed = printer.fan.speed|float %}
    {% set max_power = printer.fan.max_power|float %}
    {% set last_fan_value = last_fan_speed/max_power %}
    {% set fan_speed = params.S|default(255)|int %}
    {% set fan_selection = params.P|default(1)|int %} #added to allow for vent fan selection by slicer
    
    {% if fan_selection == 3 and fan_speed > 0 %} # use the vent fan selection if required
      RESPOND MSG="--- Turning on the Bento Box"
      boxfan_on
    {% elif fan_selection == 3 and fan_speed == 0 %}
      RESPOND MSG="--- Turning off the Bento Box"
      boxfan_off
    {% elif last_fan_value < 0.1 and fan_speed > 100 %} # or do part cooling if anything else is happening
        M106.1 S60
        SET_GCODE_VARIABLE MACRO=set_fan VARIABLE=fan_speed VALUE={fan_speed}
        UPDATE_DELAYED_GCODE ID=setfan DURATION=2
    {% else %}
        M106.1 S{fan_speed}
    {% endif %}
    
[gcode_macro set_fan]
variable_fan_speed: 0
gcode:
    M106.1 S{fan_speed}
    
[delayed_gcode setfan]
initial_duration: 0 #if initial_duration is zero, the delayed gcode won't start by default
gcode:
    set_fan
    UPDATE_DELAYED_GCODE ID=setfan DURATION=0

[power_loss_recover]

[save_temp_variables]
filename: ~/temp/tempVariables.cfg

[box_light]

[locate_printing_gcode]
queue_size: 500
e_offset: 13.5

# EXP1 / EXP2 (display) pins
#[board_pins]
#aliases:
    # EXP1 header
#    EXP1_1=PC1, EXP1_3=PA4, EXP1_5=PA6, EXP1_7=PC4, EXP1_9=<GND>,
#    EXP1_2=PC3, EXP1_4=PA5, EXP1_6=PA7, EXP1_8=PC5, EXP1_10=<5V>,
    # EXP2 header
#    EXP2_1=PB14, EXP2_3=PB11, EXP2_5=PB0,  EXP2_7=PC10,  EXP2_9=<GND>,
#    EXP2_2=PB13, EXP2_4=PA15, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<NC>

############################################################################################################################
############################################################################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [printer]
#*# delta_radius = 171.988799
#*#
#*# [stepper_a]
#*# angle = 210.228156
#*# arm_length = 335.000000
#*# position_endstop = 332.830290
#*#
#*# [stepper_b]
#*# angle = 330.553779
#*# arm_length = 335.000000
#*# position_endstop = 332.785863
#*#
#*# [stepper_c]
#*# angle = 90.000000
#*# arm_length = 335.000000
#*# position_endstop = 332.909607
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.045689, 0.045689, 0.044906, 0.077466, 0.197519, 0.163953, 0.163953
#*# 	0.004517, 0.031184, 0.012653, -0.021248, -0.018274, 0.122161, 0.015494
#*# 	-0.009116, 0.006243, 0.010822, -0.037720, -0.023879, -0.046188, 0.126014
#*# 	0.024269, -0.033558, -0.029457, -0.004019, -0.047639, -0.048288, 0.118559
#*# 	-0.082832, -0.010612, 0.008139, -0.006264, -0.025392, -0.088642, -0.032380
#*# 	-0.310935, -0.284268, -0.047065, -0.022440, -0.021653, 0.099642, 0.019642
#*# 	-0.130466, -0.130466, 0.117430, 0.034770, 0.135930, 0.056353, 0.056353
#*# tension = 0.2
#*# min_x = -124.98
#*# algo = bicubic
#*# y_count = 7
#*# mesh_y_pps = 2
#*# min_y = -124.98
#*# x_count = 7
#*# max_y = 124.98
#*# mesh_x_pps = 2
#*# max_x = 124.98
#*#
#*# [extruder]
#*#
#*# [heater_bed]
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 35.4
#*# shaper_type_y = ei
#*# shaper_freq_y = 46.4
#*#
#*# [delta_calibrate]
#*# height0 = -0.24
#*# height0_pos = 35511.500,35514.500,35559.000
#*# height1 = -0.24
#*# height1_pos = 42291.500,42174.500,31019.500
#*# height2 = -0.24
#*# height2_pos = 34269.000,46514.000,34302.000
#*# height3 = -0.24
#*# height3_pos = 31245.000,41302.000,41261.500
#*# height4 = -0.24
#*# height4_pos = 34163.500,34233.000,43150.000
#*# height5 = -0.24
#*# height5_pos = 40220.500,31541.500,40283.500
#*# height6 = -0.24
#*# height6_pos = 44698.500,34127.500,34234.000
#*#
#*# [bed_mesh 80.0c]
#*# version = 1
#*# points =
#*# 	  0.364537, 0.364537, 0.466321, 0.502435, 0.616253, 0.623400, 0.623400
#*# 	  0.305455, 0.332121, 0.402620, 0.417975, 0.479513, 0.609773, 0.503106
#*# 	  0.320499, 0.414825, 0.416983, 0.389780, 0.402930, 0.412326, 0.558201
#*# 	  0.318381, 0.306511, 0.335573, 0.425038, 0.432254, 0.491307, 0.637693
#*# 	  0.260627, 0.388853, 0.445014, 0.440229, 0.416170, 0.413935, 0.411244
#*# 	  0.324712, 0.351379, 0.394391, 0.433185, 0.474625, 0.555267, 0.475267
#*# 	  0.409534, 0.409534, 0.487095, 0.434734, 0.577679, 0.541572, 0.541572
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 55.0c]
#*# version = 1
#*# points =
#*# 	  0.242662, 0.242662, 0.372571, 0.408685, 0.517815, 0.543712, 0.543712
#*# 	  0.169517, 0.196184, 0.290120, 0.338287, 0.404513, 0.516023, 0.409356
#*# 	  0.189249, 0.311700, 0.323233, 0.305405, 0.313867, 0.332638, 0.492576
#*# 	  0.210568, 0.194011, 0.255885, 0.345351, 0.361941, 0.425682, 0.581443
#*# 	  0.157502, 0.285728, 0.379389, 0.369916, 0.345858, 0.362373, 0.359682
#*# 	  0.277837, 0.304504, 0.417829, 0.381622, 0.437125, 0.508392, 0.428392
#*# 	  0.376721, 0.376721, 0.477720, 0.430047, 0.558929, 0.527509, 0.527509
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 60.0c]
#*# version = 1
#*# points =
#*# 	  0.261412, 0.261412, 0.391321, 0.432123, 0.545940, 0.557775, 0.557775
#*# 	  0.202330, 0.228996, 0.299495, 0.347662, 0.423263, 0.548835, 0.442168
#*# 	  0.217374, 0.311700, 0.346670, 0.328842, 0.341992, 0.351388, 0.497264
#*# 	  0.219943, 0.217449, 0.274635, 0.359413, 0.366629, 0.439745, 0.595505
#*# 	  0.190314, 0.295103, 0.393452, 0.383979, 0.373983, 0.357685, 0.373744
#*# 	  0.273150, 0.299816, 0.427204, 0.395685, 0.437125, 0.522455, 0.442455
#*# 	  0.381409, 0.381409, 0.482407, 0.425359, 0.568304, 0.527509, 0.527509
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 65.0c]
#*# version = 1
#*# points =
#*# 	  0.275474, 0.275474, 0.400696, 0.446185, 0.569378, 0.571837, 0.571837
#*# 	  0.230455, 0.257121, 0.313557, 0.352350, 0.446700, 0.530085, 0.423418
#*# 	  0.245499, 0.344513, 0.356045, 0.347592, 0.356055, 0.365451, 0.492576
#*# 	  0.248068, 0.231511, 0.284010, 0.382851, 0.385379, 0.439745, 0.609568
#*# 	  0.199689, 0.313853, 0.412202, 0.393354, 0.369295, 0.362373, 0.397182
#*# 	  0.282525, 0.309191, 0.436579, 0.409747, 0.441812, 0.541205, 0.461205
#*# 	  0.386096, 0.386096, 0.473032, 0.425359, 0.554242, 0.518134, 0.518134
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 70.0c]
#*# version = 1
#*# points =
#*# 	  0.312974, 0.312974, 0.447571, 0.483685, 0.583440, 0.604650, 0.604650
#*# 	  0.263267, 0.289934, 0.360432, 0.389850, 0.484200, 0.591023, 0.484356
#*# 	  0.273624, 0.363263, 0.393545, 0.380405, 0.388867, 0.398263, 0.534764
#*# 	  0.266818, 0.264324, 0.312135, 0.401601, 0.422879, 0.495995, 0.623630
#*# 	  0.204377, 0.351353, 0.416889, 0.426166, 0.406795, 0.395185, 0.420619
#*# 	  0.296587, 0.323254, 0.413141, 0.433185, 0.479312, 0.550580, 0.470580
#*# 	  0.386096, 0.386096, 0.487095, 0.430047, 0.568304, 0.546259, 0.546259
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 75.0c]
#*# version = 1
#*# points =
#*# 	  0.317662, 0.317662, 0.452258, 0.478998, 0.597503, 0.599962, 0.599962
#*# 	  0.277330, 0.303996, 0.369807, 0.399225, 0.484200, 0.591023, 0.484356
#*# 	  0.315811, 0.391388, 0.393545, 0.385092, 0.384180, 0.388888, 0.534764
#*# 	  0.294943, 0.273699, 0.316823, 0.415663, 0.413504, 0.481932, 0.618943
#*# 	  0.241877, 0.356040, 0.421577, 0.412104, 0.392733, 0.385810, 0.387807
#*# 	  0.301275, 0.327941, 0.399079, 0.428497, 0.465250, 0.545892, 0.465892
#*# 	  0.395471, 0.395471, 0.487095, 0.444109, 0.572992, 0.536884, 0.536884
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 85.0c]
#*# version = 1
#*# points =
#*# 	  0.392662, 0.392662, 0.508508, 0.511810, 0.639690, 0.665587, 0.665587
#*# 	  0.347642, 0.374309, 0.421370, 0.446100, 0.502950, 0.637898, 0.531231
#*# 	  0.362686, 0.428888, 0.440420, 0.413217, 0.431055, 0.412326, 0.586326
#*# 	  0.360568, 0.311199, 0.368385, 0.453163, 0.465066, 0.510057, 0.661130
#*# 	  0.279377, 0.402915, 0.459077, 0.463666, 0.430233, 0.409248, 0.434682
#*# 	  0.343462, 0.370129, 0.394391, 0.447247, 0.484000, 0.569330, 0.489330
#*# 	  0.428284, 0.428284, 0.515220, 0.439422, 0.577679, 0.550947, 0.550947
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 90.0c]
#*# version = 1
#*# points =
#*# 	  0.406724, 0.406724, 0.531946, 0.525873, 0.658440, 0.665587, 0.665587
#*# 	  0.352330, 0.378996, 0.435432, 0.446100, 0.540450, 0.666023, 0.559356
#*# 	  0.390811, 0.461700, 0.454483, 0.446030, 0.454492, 0.449826, 0.595701
#*# 	  0.388693, 0.348699, 0.382448, 0.457851, 0.474441, 0.524120, 0.703318
#*# 	  0.298127, 0.412290, 0.473139, 0.477729, 0.448983, 0.427998, 0.453432
#*# 	  0.348150, 0.374816, 0.408454, 0.461310, 0.488687, 0.578705, 0.498705
#*# 	  0.423596, 0.423596, 0.529282, 0.448797, 0.587054, 0.560322, 0.560322
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 95.0c]
#*# version = 1
#*# points =
#*# 	  0.416099, 0.416099, 0.527258, 0.539935, 0.677190, 0.674962, 0.674962
#*# 	  0.375767, 0.402434, 0.458870, 0.474225, 0.540450, 0.661335, 0.554668
#*# 	  0.409561, 0.494513, 0.477920, 0.446030, 0.468555, 0.468576, 0.619139
#*# 	  0.407443, 0.348699, 0.396510, 0.481288, 0.479129, 0.547557, 0.722068
#*# 	  0.326252, 0.435728, 0.482514, 0.468354, 0.453670, 0.451435, 0.462807
#*# 	  0.357525, 0.384191, 0.417829, 0.461310, 0.516812, 0.578705, 0.498705
#*# 	  0.437659, 0.437659, 0.529282, 0.444109, 0.572992, 0.569697, 0.569697
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 100.0c]
#*# version = 1
#*# points =
#*# 	  0.439537, 0.439537, 0.560071, 0.577435, 0.677190, 0.693712, 0.693712
#*# 	  0.399205, 0.425871, 0.477620, 0.483600, 0.559200, 0.689460, 0.582793
#*# 	  0.437686, 0.513263, 0.506045, 0.460092, 0.459180, 0.468576, 0.619139
#*# 	  0.421506, 0.372136, 0.405885, 0.485976, 0.497879, 0.533495, 0.717380
#*# 	  0.345002, 0.449790, 0.501264, 0.482416, 0.453670, 0.451435, 0.481557
#*# 	  0.357525, 0.384191, 0.445954, 0.475372, 0.526187, 0.592767, 0.512767
#*# 	  0.442346, 0.442346, 0.524595, 0.448797, 0.577679, 0.588447, 0.588447
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 105.0c]
#*# version = 1
#*# points =
#*# 	  0.467662, 0.467662, 0.578821, 0.572748, 0.695940, 0.721837, 0.721837
#*# 	  0.422642, 0.449309, 0.486995, 0.511725, 0.577950, 0.703523, 0.596856
#*# 	  0.461124, 0.522638, 0.515420, 0.483530, 0.491992, 0.501388, 0.647264
#*# 	  0.440256, 0.381511, 0.429323, 0.500038, 0.516629, 0.566307, 0.745505
#*# 	  0.340314, 0.449790, 0.510639, 0.515229, 0.486483, 0.479560, 0.495619
#*# 	  0.380962, 0.407629, 0.450641, 0.498810, 0.540250, 0.602142, 0.522142
#*# 	  0.461096, 0.461096, 0.524595, 0.434734, 0.591742, 0.611884, 0.611884
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 110.0c]
#*# version = 1
#*# points =
#*# 	  0.495787, 0.495787, 0.606946, 0.600873, 0.733440, 0.726525, 0.726525
#*# 	  0.469517, 0.496184, 0.505745, 0.525787, 0.606075, 0.741023, 0.634356
#*# 	  0.489249, 0.546075, 0.548233, 0.521030, 0.520117, 0.510763, 0.689451
#*# 	  0.454318, 0.409636, 0.452760, 0.523476, 0.540066, 0.599120, 0.745505
#*# 	  0.377814, 0.463853, 0.529389, 0.533979, 0.505233, 0.488935, 0.514369
#*# 	  0.390337, 0.417004, 0.483454, 0.503497, 0.549625, 0.611517, 0.531517
#*# 	  0.451721, 0.451721, 0.533970, 0.448797, 0.591742, 0.611884, 0.611884
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 35.0c]
#*# version = 1
#*# points =
#*# 	  0.177037, 0.177037, 0.321008, 0.385248, 0.480315, 0.515587, 0.515587
#*# 	  0.108580, 0.135246, 0.229182, 0.282037, 0.357638, 0.478523, 0.371856
#*# 	  0.132999, 0.232013, 0.257608, 0.258530, 0.290430, 0.295138, 0.455076
#*# 	  0.140256, 0.128386, 0.190260, 0.275038, 0.305691, 0.364745, 0.529880
#*# 	  0.115314, 0.215415, 0.309077, 0.332416, 0.317733, 0.315498, 0.345619
#*# 	  0.240337, 0.267004, 0.380329, 0.339435, 0.390250, 0.480267, 0.400267
#*# 	  0.343909, 0.343909, 0.463657, 0.401922, 0.540179, 0.508759, 0.508759
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 30.0c]
#*# version = 1
#*# points =
#*# 	  0.177037, 0.177037, 0.316321, 0.371185, 0.494378, 0.482775, 0.482775
#*# 	  0.089830, 0.116496, 0.224495, 0.277350, 0.343575, 0.469148, 0.362481
#*# 	  0.118936, 0.213263, 0.252920, 0.239780, 0.262305, 0.276388, 0.426951
#*# 	  0.140256, 0.123699, 0.171510, 0.270351, 0.315066, 0.388182, 0.520505
#*# 	  0.134064, 0.210728, 0.309077, 0.318354, 0.294295, 0.306123, 0.336244
#*# 	  0.249712, 0.276379, 0.370954, 0.325372, 0.385562, 0.470892, 0.390892
#*# 	  0.315784, 0.315784, 0.435532, 0.392547, 0.521429, 0.494697, 0.494697
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 40.0c]
#*# version = 1
#*# points =
#*# 	  0.153599, 0.153599, 0.297571, 0.357123, 0.466253, 0.464025, 0.464025
#*# 	  0.103892, 0.130559, 0.215120, 0.267975, 0.343575, 0.464460, 0.357793
#*# 	  0.128311, 0.227325, 0.243545, 0.244467, 0.252930, 0.257638, 0.422264
#*# 	  0.130881, 0.137761, 0.176198, 0.265663, 0.301004, 0.360057, 0.506443
#*# 	  0.105939, 0.224790, 0.318452, 0.313666, 0.298983, 0.301435, 0.322182
#*# 	  0.240337, 0.267004, 0.385016, 0.348810, 0.385562, 0.475580, 0.395580
#*# 	  0.334534, 0.334534, 0.449595, 0.415984, 0.521429, 0.480634, 0.480634
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 45.0c]
#*# version = 1
#*# points =
#*# 	  0.191099, 0.191099, 0.321008, 0.375873, 0.499065, 0.515587, 0.515587
#*# 	  0.132017, 0.158684, 0.238557, 0.300787, 0.357638, 0.487898, 0.381231
#*# 	  0.128311, 0.241388, 0.257608, 0.272592, 0.290430, 0.299826, 0.455076
#*# 	  0.140256, 0.151824, 0.209010, 0.298476, 0.333816, 0.378807, 0.539255
#*# 	  0.115314, 0.238853, 0.341889, 0.346479, 0.317733, 0.315498, 0.340932
#*# 	  0.245025, 0.271691, 0.394391, 0.358185, 0.394937, 0.489642, 0.409642
#*# 	  0.343909, 0.343909, 0.458970, 0.415984, 0.549554, 0.504072, 0.504072
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
#*#
#*# [bed_mesh 50.0c]
#*# version = 1
#*# points =
#*# 	  0.195787, 0.195787, 0.344446, 0.394623, 0.503753, 0.529650, 0.529650
#*# 	  0.136705, 0.163371, 0.266682, 0.296100, 0.385763, 0.511335, 0.404668
#*# 	  0.170499, 0.278888, 0.295108, 0.277280, 0.299805, 0.304513, 0.464451
#*# 	  0.191818, 0.179949, 0.227760, 0.321913, 0.343191, 0.397557, 0.553318
#*# 	  0.143439, 0.257603, 0.360639, 0.346479, 0.327108, 0.343623, 0.359682
#*# 	  0.254400, 0.281066, 0.403766, 0.372247, 0.409000, 0.499017, 0.419017
#*# 	  0.357971, 0.357971, 0.468345, 0.406609, 0.535492, 0.504072, 0.504072
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = -124.98
#*# max_x = 124.98
#*# min_y = -124.98
#*# max_y = 124.98
